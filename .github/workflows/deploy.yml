name: Deploy Static Website to EC2 (Docker)

on:
  push:
    branches:
      - main  # This triggers the workflow when you push to 'main'

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub Actions will run this job on an Ubuntu runner

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for building images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t my-static-site .  # Dockerfile should be in the root directory

      # Step 4: Save the Docker image to a tar file
      - name: Save Docker image as tar file
        run: |
          mkdir -p $GITHUB_WORKSPACE/docker-images  # Create a directory in GitHub workspace
          docker save my-static-site:latest -o $GITHUB_WORKSPACE/docker-images/my-static-site.tar  # Save Docker image

      # Step 5: Verify the file exists before attempting to copy
      - name: List files in docker-images folder
        run: |
          ls -al $GITHUB_WORKSPACE/docker-images  # List files to confirm existence of .tar file

      # Step 6: Copy the Docker image tar file to the EC2 instance
      - name: Copy Docker image to EC2 instance
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}  # EC2 IP address from GitHub Secrets
          username: ubuntu  # Ubuntu user for EC2 instance
          key: ${{ secrets.EC2_SSH_KEY }}  # SSH private key stored in GitHub Secrets
          port: 22  # Default SSH port
          source: "$GITHUB_WORKSPACE/docker-images/my-static-site.tar"  # The image file to copy
          target: "/home/ubuntu/docker-images/my-static-site.tar"  # Target path on EC2 instance

      # Step 7: SSH into the EC2 instance and deploy the Docker container
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}  # EC2 IP address
          username: ubuntu  # Ubuntu user for EC2 instance
          key: ${{ secrets.EC2_SSH_KEY }}  # SSH private key stored in GitHub Secrets
          script: |
            cd /home/ubuntu/docker-images
            docker load -i my-static-site.tar  # Load the image
            docker stop my-static-site-container || true  # Stop any running container with this name
            docker rm my-static-site-container || true  # Remove any old container
            docker run -d -p 80:80 --name my-static-site-container my-static-site:latest  # Run the new container
